// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bimonetary.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NetCoreKit.Samples.BiMonetaryApi.Rpc {

  /// <summary>Holder for reflection information generated from bimonetary.proto</summary>
  public static partial class BimonetaryReflection {

    #region Descriptor
    /// <summary>File descriptor for bimonetary.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BimonetaryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBiaW1vbmV0YXJ5LnByb3RvEgpCaU1vbmV0YXJ5Ghtnb29nbGUvcHJvdG9i",
            "dWYvZW1wdHkucHJvdG8iHgoMVG9rZW5SZXF1ZXN0Eg4KBlN5bWJvbBgBIAEo",
            "CSLnAQoNVG9rZW5SZXNwb25zZRIMCgRSYW5rGAEgASgFEhAKCFByaWNlVXNk",
            "GAIgASgBEhAKCFByaWNlQnRjGAMgASgBEhQKDFZvbHVtbjI0aFVzZBgEIAEo",
            "ARIUCgxNYXJrZXRDYXBVc2QYBSABKAESFwoPQXZhaWxhYmxlU3VwcGx5GAYg",
            "ASgBEhMKC1RvdGFsU3VwcGx5GAcgASgBEhcKD1BlcmNlbnRDaGFuZ2UxaBgI",
            "IAEoCRIYChBQZXJjZW50Q2hhbmdlMjRoGAkgASgJEhcKD1BlcmNlbnRDaGFu",
            "Z2U3ZBgKIAEoCSIeCgxQaW5nUmVzcG9uc2USDgoGUmVzdWx0GAEgASgIMpAB",
            "Cg9FeGNoYW5nZVNlcnZpY2USQwoMR2V0VG9rZW5JbmZvEhguQmlNb25ldGFy",
            "eS5Ub2tlblJlcXVlc3QaGS5CaU1vbmV0YXJ5LlRva2VuUmVzcG9uc2USOAoE",
            "UGluZxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoYLkJpTW9uZXRhcnkuUGlu",
            "Z1Jlc3BvbnNlQieqAiROZXRDb3JlS2l0LlNhbXBsZXMuQmlNb25ldGFyeUFw",
            "aS5ScGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NetCoreKit.Samples.BiMonetaryApi.Rpc.TokenRequest), global::NetCoreKit.Samples.BiMonetaryApi.Rpc.TokenRequest.Parser, new[]{ "Symbol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetCoreKit.Samples.BiMonetaryApi.Rpc.TokenResponse), global::NetCoreKit.Samples.BiMonetaryApi.Rpc.TokenResponse.Parser, new[]{ "Rank", "PriceUsd", "PriceBtc", "Volumn24HUsd", "MarketCapUsd", "AvailableSupply", "TotalSupply", "PercentChange1H", "PercentChange24H", "PercentChange7D" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetCoreKit.Samples.BiMonetaryApi.Rpc.PingResponse), global::NetCoreKit.Samples.BiMonetaryApi.Rpc.PingResponse.Parser, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TokenRequest : pb::IMessage<TokenRequest> {
    private static readonly pb::MessageParser<TokenRequest> _parser = new pb::MessageParser<TokenRequest>(() => new TokenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetCoreKit.Samples.BiMonetaryApi.Rpc.BimonetaryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRequest(TokenRequest other) : this() {
      symbol_ = other.symbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRequest Clone() {
      return new TokenRequest(this);
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenResponse : pb::IMessage<TokenResponse> {
    private static readonly pb::MessageParser<TokenResponse> _parser = new pb::MessageParser<TokenResponse>(() => new TokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetCoreKit.Samples.BiMonetaryApi.Rpc.BimonetaryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenResponse(TokenResponse other) : this() {
      rank_ = other.rank_;
      priceUsd_ = other.priceUsd_;
      priceBtc_ = other.priceBtc_;
      volumn24HUsd_ = other.volumn24HUsd_;
      marketCapUsd_ = other.marketCapUsd_;
      availableSupply_ = other.availableSupply_;
      totalSupply_ = other.totalSupply_;
      percentChange1H_ = other.percentChange1H_;
      percentChange24H_ = other.percentChange24H_;
      percentChange7D_ = other.percentChange7D_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenResponse Clone() {
      return new TokenResponse(this);
    }

    /// <summary>Field number for the "Rank" field.</summary>
    public const int RankFieldNumber = 1;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "PriceUsd" field.</summary>
    public const int PriceUsdFieldNumber = 2;
    private double priceUsd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PriceUsd {
      get { return priceUsd_; }
      set {
        priceUsd_ = value;
      }
    }

    /// <summary>Field number for the "PriceBtc" field.</summary>
    public const int PriceBtcFieldNumber = 3;
    private double priceBtc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PriceBtc {
      get { return priceBtc_; }
      set {
        priceBtc_ = value;
      }
    }

    /// <summary>Field number for the "Volumn24hUsd" field.</summary>
    public const int Volumn24HUsdFieldNumber = 4;
    private double volumn24HUsd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Volumn24HUsd {
      get { return volumn24HUsd_; }
      set {
        volumn24HUsd_ = value;
      }
    }

    /// <summary>Field number for the "MarketCapUsd" field.</summary>
    public const int MarketCapUsdFieldNumber = 5;
    private double marketCapUsd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MarketCapUsd {
      get { return marketCapUsd_; }
      set {
        marketCapUsd_ = value;
      }
    }

    /// <summary>Field number for the "AvailableSupply" field.</summary>
    public const int AvailableSupplyFieldNumber = 6;
    private double availableSupply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AvailableSupply {
      get { return availableSupply_; }
      set {
        availableSupply_ = value;
      }
    }

    /// <summary>Field number for the "TotalSupply" field.</summary>
    public const int TotalSupplyFieldNumber = 7;
    private double totalSupply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TotalSupply {
      get { return totalSupply_; }
      set {
        totalSupply_ = value;
      }
    }

    /// <summary>Field number for the "PercentChange1h" field.</summary>
    public const int PercentChange1HFieldNumber = 8;
    private string percentChange1H_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PercentChange1H {
      get { return percentChange1H_; }
      set {
        percentChange1H_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PercentChange24h" field.</summary>
    public const int PercentChange24HFieldNumber = 9;
    private string percentChange24H_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PercentChange24H {
      get { return percentChange24H_; }
      set {
        percentChange24H_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PercentChange7d" field.</summary>
    public const int PercentChange7DFieldNumber = 10;
    private string percentChange7D_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PercentChange7D {
      get { return percentChange7D_; }
      set {
        percentChange7D_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rank != other.Rank) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PriceUsd, other.PriceUsd)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PriceBtc, other.PriceBtc)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Volumn24HUsd, other.Volumn24HUsd)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MarketCapUsd, other.MarketCapUsd)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvailableSupply, other.AvailableSupply)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalSupply, other.TotalSupply)) return false;
      if (PercentChange1H != other.PercentChange1H) return false;
      if (PercentChange24H != other.PercentChange24H) return false;
      if (PercentChange7D != other.PercentChange7D) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (PriceUsd != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PriceUsd);
      if (PriceBtc != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PriceBtc);
      if (Volumn24HUsd != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Volumn24HUsd);
      if (MarketCapUsd != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MarketCapUsd);
      if (AvailableSupply != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvailableSupply);
      if (TotalSupply != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalSupply);
      if (PercentChange1H.Length != 0) hash ^= PercentChange1H.GetHashCode();
      if (PercentChange24H.Length != 0) hash ^= PercentChange24H.GetHashCode();
      if (PercentChange7D.Length != 0) hash ^= PercentChange7D.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rank != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      if (PriceUsd != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(PriceUsd);
      }
      if (PriceBtc != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PriceBtc);
      }
      if (Volumn24HUsd != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Volumn24HUsd);
      }
      if (MarketCapUsd != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MarketCapUsd);
      }
      if (AvailableSupply != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(AvailableSupply);
      }
      if (TotalSupply != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(TotalSupply);
      }
      if (PercentChange1H.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PercentChange1H);
      }
      if (PercentChange24H.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PercentChange24H);
      }
      if (PercentChange7D.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(PercentChange7D);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (PriceUsd != 0D) {
        size += 1 + 8;
      }
      if (PriceBtc != 0D) {
        size += 1 + 8;
      }
      if (Volumn24HUsd != 0D) {
        size += 1 + 8;
      }
      if (MarketCapUsd != 0D) {
        size += 1 + 8;
      }
      if (AvailableSupply != 0D) {
        size += 1 + 8;
      }
      if (TotalSupply != 0D) {
        size += 1 + 8;
      }
      if (PercentChange1H.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PercentChange1H);
      }
      if (PercentChange24H.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PercentChange24H);
      }
      if (PercentChange7D.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PercentChange7D);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.PriceUsd != 0D) {
        PriceUsd = other.PriceUsd;
      }
      if (other.PriceBtc != 0D) {
        PriceBtc = other.PriceBtc;
      }
      if (other.Volumn24HUsd != 0D) {
        Volumn24HUsd = other.Volumn24HUsd;
      }
      if (other.MarketCapUsd != 0D) {
        MarketCapUsd = other.MarketCapUsd;
      }
      if (other.AvailableSupply != 0D) {
        AvailableSupply = other.AvailableSupply;
      }
      if (other.TotalSupply != 0D) {
        TotalSupply = other.TotalSupply;
      }
      if (other.PercentChange1H.Length != 0) {
        PercentChange1H = other.PercentChange1H;
      }
      if (other.PercentChange24H.Length != 0) {
        PercentChange24H = other.PercentChange24H;
      }
      if (other.PercentChange7D.Length != 0) {
        PercentChange7D = other.PercentChange7D;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 17: {
            PriceUsd = input.ReadDouble();
            break;
          }
          case 25: {
            PriceBtc = input.ReadDouble();
            break;
          }
          case 33: {
            Volumn24HUsd = input.ReadDouble();
            break;
          }
          case 41: {
            MarketCapUsd = input.ReadDouble();
            break;
          }
          case 49: {
            AvailableSupply = input.ReadDouble();
            break;
          }
          case 57: {
            TotalSupply = input.ReadDouble();
            break;
          }
          case 66: {
            PercentChange1H = input.ReadString();
            break;
          }
          case 74: {
            PercentChange24H = input.ReadString();
            break;
          }
          case 82: {
            PercentChange7D = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PingResponse : pb::IMessage<PingResponse> {
    private static readonly pb::MessageParser<PingResponse> _parser = new pb::MessageParser<PingResponse>(() => new PingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetCoreKit.Samples.BiMonetaryApi.Rpc.BimonetaryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse(PingResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse Clone() {
      return new PingResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
